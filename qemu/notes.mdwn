# boot off an iso

        iso=/nfs/live/binary.iso
        qemu -boot d -std-vga -cdrom ${iso}

# boot off an hd image

        hd=/nfs/live/binary.img
        qemu -boot c -std-vga -hda ${hd}

# boot off an NFS filesystem 

        emulator=kvm
        root=/export/netboot/binary/live/filesystem.dir
        kernel=${root}/boot/vmlinuz-2.6.23.12-20080107
        initrd=${root}/boot/initrd.img-2.6.23.12-20080107
        nfsroot=192.168.40.27:${root}
        ip=192.168.40.29::192.168.40.1:255.255.255.0

  - tap with private ip

        qemu -kernel ${kernel} -initrd ${initrd} -append "root=/dev/nfs \
          nfsroot=${nfsroot} console=ttyS0 ip=${ip}" -nographic -hda /dev/zero \
          -net nic,vlan=0 -net tap,vlan=0,ifname=tap0,script=${HOME}/qemu-ifup

  - tap with bridge

        ${emulator} -kernel ${kernel} -initrd ${initrd} -append "root=/dev/nfs \
          nfsroot=${nfsroot} console=ttyS0 ip=${ip}" -nographic -hda /dev/zero \
          -net nic,macaddr=00:16:3e:00:00:01 \
          -net tap,ifname=tap0,script=${HOME}/qemu-ifup-bridge

# create qcow2 image

    qemu-img create -f qcow2 winxp.qcow2 10G

# qemu scripts

  - qemu-ifup

        #!/bin/sh
        echo "Executing $0"
        ifconfig $1 10.10.12.1 netmask 255.255.255.0

  - qemu-ifup-bridge

        #!/bin/sh
        echo "Executing $0"
        echo "Bringing up $1 for bridged mode..."
        sudo ifconfig $1 0.0.0.0 promisc up
        echo "Adding $1 to br0..."
        sudo brctl addif br0 $1
        sleep 2 
